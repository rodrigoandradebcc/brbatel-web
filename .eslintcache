[{"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\pages\\Dashboard\\styles.tsx":"1","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\pages\\Dashboard\\index.tsx":"2","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\Input\\styles.ts":"3","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\ModalAddProduct\\index.tsx":"4","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\Modal\\index.tsx":"5","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\ModalAddProduct\\styles.ts":"6","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\Input\\index.tsx":"7","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\services\\api.ts":"8","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\App.tsx":"9","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\ModalEditProduct\\index.tsx":"10","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\ModalEditProduct\\styles.ts":"11","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\routes\\index.tsx":"12","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\ToastContainer\\Toast\\styles.ts":"13","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\ToastContainer\\index.tsx":"14","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\hooks\\toast.tsx":"15","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\ToastContainer\\Toast\\index.tsx":"16"},{"size":4401,"mtime":1611041649583,"results":"17","hashOfConfig":"18"},{"size":10843,"mtime":1611041943158,"results":"19","hashOfConfig":"18"},{"size":834,"mtime":1610937456380,"results":"20","hashOfConfig":"21"},{"size":2883,"mtime":1611044541951,"results":"22","hashOfConfig":"18"},{"size":1094,"mtime":1611038646456,"results":"23","hashOfConfig":"18"},{"size":1592,"mtime":1611039543531,"results":"24","hashOfConfig":"18"},{"size":1352,"mtime":1610929667592,"results":"25","hashOfConfig":"18"},{"size":116,"mtime":1610861361205,"results":"26","hashOfConfig":"21"},{"size":374,"mtime":1611001169483,"results":"27","hashOfConfig":"21"},{"size":3334,"mtime":1611044595050,"results":"28","hashOfConfig":"18"},{"size":1448,"mtime":1611040727616,"results":"29","hashOfConfig":"18"},{"size":251,"mtime":1610857521545,"results":"30","hashOfConfig":"21"},{"size":1439,"mtime":1611005114563,"results":"31","hashOfConfig":"21"},{"size":783,"mtime":1611004544468,"results":"32","hashOfConfig":"18"},{"size":1453,"mtime":1611004801857,"results":"33","hashOfConfig":"21"},{"size":1213,"mtime":1611004849089,"results":"34","hashOfConfig":"21"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tyxnvp",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t468ox",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\pages\\Dashboard\\styles.tsx",[],"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\pages\\Dashboard\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\Input\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\ModalAddProduct\\index.tsx",["68"],"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\Modal\\index.tsx",["69"],"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\ModalAddProduct\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\Input\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\services\\api.ts",[],"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\App.tsx",[],"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\ModalEditProduct\\index.tsx",["70"],"import React, { useCallback, useRef } from 'react';\n\nimport { FiCheckSquare, FiTrash2 } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form, Label, GroupButtons, TwoInputs } from './styles';\nimport Modal from '../Modal';\nimport Input from '../Input';\n\ninterface IProduct {\n  id: string;\n  name: string;\n  current_quantity: number;\n  minimum_quantity: number;\n  cost: number;\n  resale_price: number;\n}\n\ninterface IProductEdit {\n  id?: string;\n  name: string;\n  current_quantity: number;\n  minimum_quantity: number;\n  cost: number;\n  resale_price: number;\n}\n\ninterface IEditProductDataToDash {\n  id: string;\n  name: string;\n  current_quantity: number;\n  minimum_quantity: number;\n  cost: number;\n  resale_price: number;\n}\n\ninterface IModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n  handleUpdateProduct: (Product: IProduct) => void;\n  editingProduct: IProductEdit;\n  deleteProduct(id: string): void;\n}\n\nconst ModalEditProduct: React.FC<IModalProps> = ({\n  isOpen,\n  setIsOpen,\n  editingProduct,\n  handleUpdateProduct,\n  deleteProduct,\n}) => {\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(\n    async (data: IEditProductDataToDash) => {\n      console.log('data:', data);\n      handleUpdateProduct(data);\n      setIsOpen();\n    },\n    [handleUpdateProduct, setIsOpen],\n  );\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      <Form ref={formRef} onSubmit={handleSubmit} initialData={editingProduct}>\n        <h1>Editar Produto</h1>\n\n        {console.log('MODAL PRODUTO', editingProduct)}\n\n        <div>\n          <Label>NOME DO PRODUTO</Label>\n          <Input name=\"name\" placeholder=\"Ex: Monitor 29''\" />\n        </div>\n\n        <TwoInputs className=\"two-inputs\">\n          <div>\n            <Label>QUANTIDADE ATUAL</Label>\n            <Input name=\"current_quantity\" placeholder=\"Ex: 100\" />\n          </div>\n          <div>\n            <Label>QUANTIDADE MÍNIMA</Label>\n            <Input name=\"minimum_quantity\" placeholder=\"Ex: 10\" />\n          </div>\n        </TwoInputs>\n\n        <TwoInputs className=\"two-inputs\">\n          <div>\n            <Label>CUSTO</Label>\n            <Input\n              name=\"cost\"\n              type=\"number\"\n              step=\"0.01\"\n              placeholder=\"Ex: 19.90\"\n            />\n          </div>\n          <div>\n            <Label>PREÇO DE REVENDA</Label>\n            <Input\n              name=\"resale_price\"\n              type=\"number\"\n              step=\"0.01\"\n              placeholder=\"Ex: 25.90\"\n            />\n          </div>\n        </TwoInputs>\n\n        <GroupButtons>\n          <button\n            type=\"button\"\n            className=\"trash\"\n            onClick={() => {\n              if (editingProduct.id) {\n                deleteProduct(editingProduct.id);\n                setIsOpen();\n              }\n            }}\n          >\n            <FiTrash2 size={20} />\n            {/* <div className=\"icon\">\n              <FiCheckSquare size={24} />\n            </div> */}\n          </button>\n\n          <button type=\"submit\">\n            <p className=\"text\">Editar Produto</p>\n            {/* <div className=\"icon\">\n              <FiCheckSquare size={24} />\n            </div> */}\n          </button>\n        </GroupButtons>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ModalEditProduct;\n","D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\ModalEditProduct\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\routes\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\ToastContainer\\Toast\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\ToastContainer\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\hooks\\toast.tsx",[],"D:\\Dev\\ProjetosParalelos\\brbatel\\brbatel-web\\src\\components\\ToastContainer\\Toast\\index.tsx",[],{"ruleId":"71","severity":1,"message":"72","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":6,"column":13,"nodeType":"77","messageId":"78","endLine":6,"endColumn":16,"suggestions":"79"},{"ruleId":"71","severity":1,"message":"80","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":23},"@typescript-eslint/no-unused-vars","'InputMask' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["81","82"],"'FiCheckSquare' is defined but never used.",{"messageId":"83","fix":"84","desc":"85"},{"messageId":"86","fix":"87","desc":"88"},"suggestUnknown",{"range":"89","text":"90"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"89","text":"91"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[128,131],"unknown","never"]